{"ast":null,"code":"var _jsxFileName = \"/Users/mac/prj/chess-guy/src/App.js\";\nimport React, { useState, useEffect } from \"react\"; // import logo from \"./logo.svg\";\n\nimport \"./App.css\";\nimport styled from \"styled-components\"; // fromSquare \"10\"\n// toSquare \"21\"\n// mapObj\n// 2. mapObj[toSquare] = mapObj[fromSquare] to the obj\n// 1. delete the property whose key is \"fromSquare\" from mapObj\n\nconst mapObj = {\n  \"00\": {\n    type: \"rook\",\n    player: \"black\"\n  },\n  \"01\": {\n    type: \"rook\",\n    player: \"black\"\n  },\n  \"01\": {\n    type: \"knight\",\n    player: \"black\"\n  },\n  \"02\": {\n    type: \"bishop\",\n    player: \"black\"\n  },\n  \"03\": {\n    type: \"king\",\n    player: \"black\"\n  },\n  \"04\": {\n    type: \"queen\",\n    player: \"black\"\n  },\n  \"05\": {\n    type: \"bishop\",\n    player: \"black\"\n  },\n  \"06\": {\n    type: \"knight\",\n    player: \"black\"\n  },\n  \"07\": {\n    type: \"rook\",\n    player: \"black\"\n  },\n  \"10\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"11\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"12\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"13\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"14\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"15\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"16\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"17\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"60\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"61\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"62\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"63\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"64\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"65\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"66\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"67\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"70\": {\n    type: \"rook\",\n    player: \"white\"\n  },\n  \"71\": {\n    type: \"knight\",\n    player: \"white\"\n  },\n  \"72\": {\n    type: \"bishop\",\n    player: \"white\"\n  },\n  \"73\": {\n    type: \"queen\",\n    player: \"white\"\n  },\n  \"74\": {\n    type: \"king\",\n    player: \"white\"\n  },\n  \"75\": {\n    type: \"bishop\",\n    player: \"white\"\n  },\n  \"76\": {\n    type: \"knight\",\n    player: \"white\"\n  },\n  \"77\": {\n    type: \"rook\",\n    player: \"white\"\n  }\n}; // movePiece(\"10\", \"30\");\n\nconst Square = ({\n  color,\n  piece = {},\n  colorPic,\n  onClick,\n  onMouseOver\n}) => {\n  let pieceChar;\n\n  switch (piece.type) {\n    case \"rook\":\n      pieceChar = \"♖\";\n      break;\n\n    case \"knight\":\n      pieceChar = \"♘\";\n      break;\n\n    case \"bishop\":\n      pieceChar = \"♗\";\n      break;\n\n    case \"king\":\n      pieceChar = \"♕\";\n      break;\n\n    case \"queen\":\n      pieceChar = \"♔\";\n      break;\n\n    case \"pawn\":\n      pieceChar = \"♙\";\n      break;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onClick,\n    onMouseOver: onMouseOver,\n    style: {\n      color: piece.player === \"white\" ? \"green\" : \"blue\",\n      border: \"black solid 1px\",\n      height: \"70px\",\n      width: \"70px\",\n      backgroundColor: color === \"black\" ? \"white\" : \"gray\",\n      fontSize: \"45px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, pieceChar);\n};\n\nconst Board = () => {\n  const [count, setCount] = useState(0);\n  const [fromSquare, setFromSquare] = useState(); // const [toSquare, setToSquare] = useState();\n\n  const movePiece = (fromSquare, toSquare) => {\n    console.log(\"inside move\", fromSquare, toSquare); // 1. mapObj[toSquare] = mapObj[fromSquare] to the obj\n    // 2. delete the property whose key is \"fromSquare\" from mapObj\n\n    mapObj[toSquare] = mapObj[fromSquare];\n    delete mapObj[fromSquare];\n  }; // useEffect(() => {\n  //   console.log(\"inEffect\", fromSquare, toSquare);\n  //   if (fromSquare && toSquare) {\n  //     movePiece(fromSquare, toSquare);\n  //     // setToSquare();\n  //   }\n  // }, [fromSquare, toSquare]);\n  // console.log(\"fromSquare:\", fromSquare);\n  // console.log(\"ToSquare:\", toSquare);\n\n\n  let isHovered = false;\n  const newHover = styled.backgroundColor`\n    background-color: red;\n  `;\n\n  const handleMouseOver = colorPic => {\n    if (count === 0) {\n      console.log(\"color:\", colorPic);\n      isHovered = true;\n      colorPic = \"black\";\n      console.log(\"color2:\", colorPic);\n      console.log(isHovered);\n    }\n  };\n\n  const handleClick = con => {\n    if (count === 0) {\n      setFromSquare(con);\n      setCount(count + 1);\n      return;\n    } //second click\n    // fromSquare -> toSqaure\n\n\n    movePiece(fromSquare, con);\n    setCount(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, Array(8).fill(0).map((e, rowIndex) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, Array(8).fill(0).map((e, squareIndex) => {\n      const colorPic = (squareIndex + rowIndex) % 2 === 0 ? \"white\" : \"black\";\n      const numRow = rowIndex.toString();\n      const numSquare = squareIndex.toString();\n      const con = numRow.concat(numSquare);\n      const piece = mapObj[con]; // const a = (gil)=>{//outer function\n      //   return (hagai) =>{ //inner function\n      //     console.log(gil, hagai)\n      //   }\n      // }\n\n      return /*#__PURE__*/React.createElement(Square, {\n        color: colorPic,\n        piece: piece,\n        onClick: () => handleClick(con),\n        onMouseOver: () => handleMouseOver(colorPic),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }\n      });\n    }));\n  }));\n  /* return (\n    <div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"white\" piece={{ type: \"rook\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"knight\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"bishop\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"king\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"queen\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"bishop\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"knight\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"rook\", player: \"white\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n      </div>\n       <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: \"rook\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"knight\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"bishop\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"queen\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"king\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"bishop\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"knight\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"rook\", player: \"black\" }} />\n      </div>\n    </div>\n   );*/\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Board, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/prj/chess-guy/src/App.js"],"names":["React","useState","useEffect","styled","mapObj","type","player","Square","color","piece","colorPic","onClick","onMouseOver","pieceChar","border","height","width","backgroundColor","fontSize","display","alignItems","justifyContent","Board","count","setCount","fromSquare","setFromSquare","movePiece","toSquare","console","log","isHovered","newHover","handleMouseOver","handleClick","con","Array","fill","map","e","rowIndex","flexDirection","squareIndex","numRow","toString","numSquare","concat","App"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\n// fromSquare \"10\"\n// toSquare \"21\"\n// mapObj\n// 2. mapObj[toSquare] = mapObj[fromSquare] to the obj\n// 1. delete the property whose key is \"fromSquare\" from mapObj\n\nconst mapObj = {\n  \"00\": { type: \"rook\", player: \"black\" },\n  \"01\": { type: \"rook\", player: \"black\" },\n  \"01\": { type: \"knight\", player: \"black\" },\n  \"02\": { type: \"bishop\", player: \"black\" },\n  \"03\": { type: \"king\", player: \"black\" },\n  \"04\": { type: \"queen\", player: \"black\" },\n  \"05\": { type: \"bishop\", player: \"black\" },\n  \"06\": { type: \"knight\", player: \"black\" },\n  \"07\": { type: \"rook\", player: \"black\" },\n  \"10\": { type: \"pawn\", player: \"black\" },\n  \"11\": { type: \"pawn\", player: \"black\" },\n  \"12\": { type: \"pawn\", player: \"black\" },\n  \"13\": { type: \"pawn\", player: \"black\" },\n  \"14\": { type: \"pawn\", player: \"black\" },\n  \"15\": { type: \"pawn\", player: \"black\" },\n  \"16\": { type: \"pawn\", player: \"black\" },\n  \"17\": { type: \"pawn\", player: \"black\" },\n  \"60\": { type: \"pawn\", player: \"white\" },\n  \"61\": { type: \"pawn\", player: \"white\" },\n  \"62\": { type: \"pawn\", player: \"white\" },\n  \"63\": { type: \"pawn\", player: \"white\" },\n  \"64\": { type: \"pawn\", player: \"white\" },\n  \"65\": { type: \"pawn\", player: \"white\" },\n  \"66\": { type: \"pawn\", player: \"white\" },\n  \"67\": { type: \"pawn\", player: \"white\" },\n  \"70\": { type: \"rook\", player: \"white\" },\n  \"71\": { type: \"knight\", player: \"white\" },\n  \"72\": { type: \"bishop\", player: \"white\" },\n  \"73\": { type: \"queen\", player: \"white\" },\n  \"74\": { type: \"king\", player: \"white\" },\n  \"75\": { type: \"bishop\", player: \"white\" },\n  \"76\": { type: \"knight\", player: \"white\" },\n  \"77\": { type: \"rook\", player: \"white\" },\n};\n\n// movePiece(\"10\", \"30\");\nconst Square = ({ color, piece = {}, colorPic, onClick, onMouseOver }) => {\n  let pieceChar;\n  switch (piece.type) {\n    case \"rook\":\n      pieceChar = \"♖\";\n      break;\n    case \"knight\":\n      pieceChar = \"♘\";\n      break;\n    case \"bishop\":\n      pieceChar = \"♗\";\n      break;\n    case \"king\":\n      pieceChar = \"♕\";\n      break;\n    case \"queen\":\n      pieceChar = \"♔\";\n      break;\n    case \"pawn\":\n      pieceChar = \"♙\";\n      break;\n  }\n  return (\n    <div\n      onClick={onClick}\n      onMouseOver={onMouseOver}\n      style={{\n        color: piece.player === \"white\" ? \"green\" : \"blue\",\n        border: \"black solid 1px\",\n        height: \"70px\",\n        width: \"70px\",\n        backgroundColor: color === \"black\" ? \"white\" : \"gray\",\n        fontSize: \"45px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      {pieceChar}\n    </div>\n  );\n};\nconst Board = () => {\n  const [count, setCount] = useState(0);\n  const [fromSquare, setFromSquare] = useState();\n  // const [toSquare, setToSquare] = useState();\n\n  const movePiece = (fromSquare, toSquare) => {\n    console.log(\"inside move\", fromSquare, toSquare);\n    // 1. mapObj[toSquare] = mapObj[fromSquare] to the obj\n    // 2. delete the property whose key is \"fromSquare\" from mapObj\n    mapObj[toSquare] = mapObj[fromSquare];\n    delete mapObj[fromSquare];\n  };\n  // useEffect(() => {\n  //   console.log(\"inEffect\", fromSquare, toSquare);\n  //   if (fromSquare && toSquare) {\n  //     movePiece(fromSquare, toSquare);\n  //     // setToSquare();\n  //   }\n  // }, [fromSquare, toSquare]);\n\n  // console.log(\"fromSquare:\", fromSquare);\n  // console.log(\"ToSquare:\", toSquare);\n  let isHovered = false;\n  const newHover = styled.backgroundColor`\n    background-color: red;\n  `;\n  const handleMouseOver = (colorPic) => {\n    if (count === 0) {\n      console.log(\"color:\", colorPic);\n      isHovered = true;\n      colorPic = \"black\";\n      console.log(\"color2:\", colorPic);\n\n      console.log(isHovered);\n    }\n  };\n\n  const handleClick = (con) => {\n    if (count === 0) {\n      setFromSquare(con);\n      setCount(count + 1);\n      return;\n    }\n    //second click\n    // fromSquare -> toSqaure\n    movePiece(fromSquare, con);\n    setCount(0);\n  };\n\n  return (\n    <div>\n      {Array(8)\n        .fill(0)\n        .map((e, rowIndex) => {\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              {Array(8)\n                .fill(0)\n                .map((e, squareIndex) => {\n                  const colorPic =\n                    (squareIndex + rowIndex) % 2 === 0 ? \"white\" : \"black\";\n\n                  const numRow = rowIndex.toString();\n                  const numSquare = squareIndex.toString();\n                  const con = numRow.concat(numSquare);\n                  const piece = mapObj[con];\n\n                  // const a = (gil)=>{//outer function\n                  //   return (hagai) =>{ //inner function\n                  //     console.log(gil, hagai)\n                  //   }\n                  // }\n\n                  return (\n                    <Square\n                      color={colorPic}\n                      piece={piece}\n                      onClick={() => handleClick(con)}\n                      onMouseOver={() => handleMouseOver(colorPic)}\n                    />\n                  );\n                })}\n            </div>\n          );\n        })}\n    </div>\n  );\n\n  /* return (\n    <div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"white\" piece={{ type: \"rook\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"knight\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"bishop\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"king\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"queen\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"bishop\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"knight\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"rook\", player: \"white\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n      </div>\n\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: \"rook\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"knight\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"bishop\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"queen\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"king\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"bishop\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"knight\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"rook\", player: \"black\" }} />\n      </div>\n    </div>\n   );*/\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n      {/* <Square color=\"white\" piece={{type:\"rook\", player:\"black\"}} /> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}