{"ast":null,"code":"var _jsxFileName = \"/Users/mac/prj/chess-guy/src/App.js\";\nimport React, { useState, useEffect } from \"react\"; // import logo from \"./logo.svg\";\n\nimport \"./App.css\";\nimport Square from \"./Square\";\nimport styled from \"styled-components\"; // fromSquare \"10\"\n// toSquare \"21\"\n// mapObj\n// 2. mapObj[toSquare] = mapObj[fromSquare] to the obj\n// 1. delete the property whose key is \"fromSquare\" from mapObj\n// const Div = styled.div({\n//   background: \"yellow\",\n//   opacity: \"1\",\n//   \":hover\": {\n//     background: \"red\",\n//   },\n// });\n\nconst mapObj = {\n  \"00\": {\n    type: \"rook\",\n    player: \"black\"\n  },\n  \"01\": {\n    type: \"rook\",\n    player: \"black\"\n  },\n  \"01\": {\n    type: \"knight\",\n    player: \"black\"\n  },\n  \"02\": {\n    type: \"bishop\",\n    player: \"black\"\n  },\n  \"03\": {\n    type: \"king\",\n    player: \"black\"\n  },\n  \"04\": {\n    type: \"queen\",\n    player: \"black\"\n  },\n  \"05\": {\n    type: \"bishop\",\n    player: \"black\"\n  },\n  \"06\": {\n    type: \"knight\",\n    player: \"black\"\n  },\n  \"07\": {\n    type: \"rook\",\n    player: \"black\"\n  },\n  \"10\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"11\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"12\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"13\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"14\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"15\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"16\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"17\": {\n    type: \"pawn\",\n    player: \"black\"\n  },\n  \"60\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"61\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"62\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"63\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"64\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"65\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"66\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"67\": {\n    type: \"pawn\",\n    player: \"white\"\n  },\n  \"70\": {\n    type: \"rook\",\n    player: \"white\"\n  },\n  \"71\": {\n    type: \"knight\",\n    player: \"white\"\n  },\n  \"72\": {\n    type: \"bishop\",\n    player: \"white\"\n  },\n  \"73\": {\n    type: \"queen\",\n    player: \"white\"\n  },\n  \"74\": {\n    type: \"king\",\n    player: \"white\"\n  },\n  \"75\": {\n    type: \"bishop\",\n    player: \"white\"\n  },\n  \"76\": {\n    type: \"knight\",\n    player: \"white\"\n  },\n  \"77\": {\n    type: \"rook\",\n    player: \"white\"\n  }\n}; // movePiece(\"10\", \"30\");\n\nconst Board = () => {\n  const [count, setCount] = useState(0);\n  const [fromSquare, setFromSquare] = useState();\n  const [toSquare, setToSquare] = useState();\n\n  const movePiece = (fromSquare, toSquare) => {\n    console.log(\"inside move\", fromSquare, toSquare); // 1. mapObj[toSquare] = mapObj[fromSquare] to the obj\n    // 2. delete the property whose key is \"fromSquare\" from mapObj\n\n    mapObj[toSquare] = mapObj[fromSquare];\n    delete mapObj[fromSquare];\n  }; // useEffect(() => {\n  //   console.log(\"inEffect\", fromSquare, toSquare);\n  //   if (fromSquare && toSquare) {\n  //     movePiece(fromSquare, toSquare);\n  //     // setToSquare();\n  //   }\n  // }, [fromSquare, toSquare]);\n  // console.log(\"fromSquare:\", fromSquare);\n  // console.log(\"ToSquare:\", toSquare);\n  // const borderHover = \"black solid 1px\";\n  // console.log(borderHover);\n\n\n  let isHovered = false;\n\n  const handleMouseOver = (colorPic, borderHover) => {\n    if (count === 0) {\n      // borderHover = \"red solid 1px\";\n      // console.log(borderHover);\n      // console.log(\"color:\", colorPic);\n      isHovered = true; // colorPic = \"black\";\n      // console.log(\"color2:\", colorPic);P\n\n      console.log(isHovered);\n    }\n  };\n\n  const handleClick = con => {\n    if (count === 0) {\n      setFromSquare(con);\n      setCount(count + 1);\n      return;\n    } //second click\n    // fromSquare -> toSqaure\n\n\n    movePiece(fromSquare, con);\n    setCount(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, Array(8).fill(0).map((e, rowIndex) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, Array(8).fill(0).map((e, squareIndex) => {\n      const colorPic = (squareIndex + rowIndex) % 2 === 0 ? \"white\" : \"black\";\n      const numRow = rowIndex.toString();\n      const numSquare = squareIndex.toString();\n      const con = numRow.concat(numSquare);\n      const piece = mapObj[con];\n      return /*#__PURE__*/React.createElement(Square, {\n        primary: true,\n        color: colorPic,\n        piece: piece,\n        onClick: () => handleClick(con),\n        onMouseOver: () => handleMouseOver(colorPic),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      });\n    }));\n  }));\n  /* return (\n    <div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"white\" piece={{ type: \"rook\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"knight\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"bishop\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"king\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"queen\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"bishop\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"knight\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"rook\", player: \"white\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n      </div>\n       <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: \"rook\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"knight\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"bishop\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"queen\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"king\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"bishop\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"knight\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"rook\", player: \"black\" }} />\n      </div>\n    </div>\n   );*/\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Board, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/prj/chess-guy/src/App.js"],"names":["React","useState","useEffect","Square","styled","mapObj","type","player","Board","count","setCount","fromSquare","setFromSquare","toSquare","setToSquare","movePiece","console","log","isHovered","handleMouseOver","colorPic","borderHover","handleClick","con","Array","fill","map","e","rowIndex","display","flexDirection","squareIndex","numRow","toString","numSquare","concat","piece","App"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Square from \"./Square\";\nimport styled from \"styled-components\";\n\n// fromSquare \"10\"\n// toSquare \"21\"\n// mapObj\n// 2. mapObj[toSquare] = mapObj[fromSquare] to the obj\n// 1. delete the property whose key is \"fromSquare\" from mapObj\n\n// const Div = styled.div({\n//   background: \"yellow\",\n//   opacity: \"1\",\n//   \":hover\": {\n//     background: \"red\",\n\n//   },\n// });\n\nconst mapObj = {\n  \"00\": { type: \"rook\", player: \"black\" },\n  \"01\": { type: \"rook\", player: \"black\" },\n  \"01\": { type: \"knight\", player: \"black\" },\n  \"02\": { type: \"bishop\", player: \"black\" },\n  \"03\": { type: \"king\", player: \"black\" },\n  \"04\": { type: \"queen\", player: \"black\" },\n  \"05\": { type: \"bishop\", player: \"black\" },\n  \"06\": { type: \"knight\", player: \"black\" },\n  \"07\": { type: \"rook\", player: \"black\" },\n  \"10\": { type: \"pawn\", player: \"black\" },\n  \"11\": { type: \"pawn\", player: \"black\" },\n  \"12\": { type: \"pawn\", player: \"black\" },\n  \"13\": { type: \"pawn\", player: \"black\" },\n  \"14\": { type: \"pawn\", player: \"black\" },\n  \"15\": { type: \"pawn\", player: \"black\" },\n  \"16\": { type: \"pawn\", player: \"black\" },\n  \"17\": { type: \"pawn\", player: \"black\" },\n  \"60\": { type: \"pawn\", player: \"white\" },\n  \"61\": { type: \"pawn\", player: \"white\" },\n  \"62\": { type: \"pawn\", player: \"white\" },\n  \"63\": { type: \"pawn\", player: \"white\" },\n  \"64\": { type: \"pawn\", player: \"white\" },\n  \"65\": { type: \"pawn\", player: \"white\" },\n  \"66\": { type: \"pawn\", player: \"white\" },\n  \"67\": { type: \"pawn\", player: \"white\" },\n  \"70\": { type: \"rook\", player: \"white\" },\n  \"71\": { type: \"knight\", player: \"white\" },\n  \"72\": { type: \"bishop\", player: \"white\" },\n  \"73\": { type: \"queen\", player: \"white\" },\n  \"74\": { type: \"king\", player: \"white\" },\n  \"75\": { type: \"bishop\", player: \"white\" },\n  \"76\": { type: \"knight\", player: \"white\" },\n  \"77\": { type: \"rook\", player: \"white\" },\n};\n\n// movePiece(\"10\", \"30\");\n\nconst Board = () => {\n  const [count, setCount] = useState(0);\n  const [fromSquare, setFromSquare] = useState();\n  const [toSquare, setToSquare] = useState();\n\n  const movePiece = (fromSquare, toSquare) => {\n    console.log(\"inside move\", fromSquare, toSquare);\n    // 1. mapObj[toSquare] = mapObj[fromSquare] to the obj\n    // 2. delete the property whose key is \"fromSquare\" from mapObj\n    mapObj[toSquare] = mapObj[fromSquare];\n    delete mapObj[fromSquare];\n  };\n  // useEffect(() => {\n  //   console.log(\"inEffect\", fromSquare, toSquare);\n  //   if (fromSquare && toSquare) {\n  //     movePiece(fromSquare, toSquare);\n  //     // setToSquare();\n  //   }\n  // }, [fromSquare, toSquare]);\n\n  // console.log(\"fromSquare:\", fromSquare);\n  // console.log(\"ToSquare:\", toSquare);\n  // const borderHover = \"black solid 1px\";\n  // console.log(borderHover);\n  let isHovered = false;\n\n  const handleMouseOver = (colorPic, borderHover) => {\n    if (count === 0) {\n      // borderHover = \"red solid 1px\";\n      // console.log(borderHover);\n      // console.log(\"color:\", colorPic);\n      isHovered = true;\n      // colorPic = \"black\";\n      // console.log(\"color2:\", colorPic);P\n\n      console.log(isHovered);\n    }\n  };\n\n  const handleClick = (con) => {\n    if (count === 0) {\n      setFromSquare(con);\n      setCount(count + 1);\n      return;\n    }\n    //second click\n    // fromSquare -> toSqaure\n    movePiece(fromSquare, con);\n    setCount(0);\n  };\n\n  return (\n    <div>\n      {Array(8)\n        .fill(0)\n        .map((e, rowIndex) => {\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              {Array(8)\n                .fill(0)\n                .map((e, squareIndex) => {\n                  const colorPic =\n                    (squareIndex + rowIndex) % 2 === 0 ? \"white\" : \"black\";\n\n                  const numRow = rowIndex.toString();\n                  const numSquare = squareIndex.toString();\n                  const con = numRow.concat(numSquare);\n                  const piece = mapObj[con];\n\n                  return (\n                    <Square\n                      primary\n                      color={colorPic}\n                      piece={piece}\n                      onClick={() => handleClick(con)}\n                      onMouseOver={() => handleMouseOver(colorPic)}\n                    />\n                  );\n                })}\n            </div>\n          );\n        })}\n    </div>\n  );\n\n  /* return (\n    <div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"white\" piece={{ type: \"rook\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"knight\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"bishop\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"king\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"queen\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"bishop\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"knight\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"rook\", player: \"white\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"white\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"white\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: null, player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: null, player: \"black\" }} />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"pawn\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"pawn\", player: \"black\" }} />\n      </div>\n\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Square color=\"black\" piece={{ type: \"rook\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"knight\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"bishop\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"queen\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"king\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"bishop\", player: \"black\" }} />\n        <Square color=\"black\" piece={{ type: \"knight\", player: \"black\" }} />\n        <Square color=\"white\" piece={{ type: \"rook\", player: \"black\" }} />\n      </div>\n    </div>\n   );*/\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n      {/* <Square color=\"white\" piece={{type:\"rook\", player:\"black\"}} /> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}